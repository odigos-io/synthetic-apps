apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionlatest
  namespace: nodejs
spec:
  containers:
    - name: versionlatest
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: nodejs
status:
  containerStatuses:
    - name: versionlatest
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionlatest
  namespace: nodejs
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: nodejs
  labels:
    instrumented-app: deployment-versionlatest
status:
  healthy: true
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionminimum
  namespace: nodejs
spec:
  containers:
    - name: versionminimum
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: nodejs
status:
  containerStatuses:
    - name: versionminimum
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionminimum
  namespace: nodejs
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: nodejs
  labels:
    instrumented-app: deployment-versionminimum
status:
  healthy: true
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): false
  labels:
    app: versionunsupported
  namespace: nodejs 
spec:
  containers:
    - name: versionunsupported
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']): null
status:
  containerStatuses:
    - name: versionunsupported
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionunsupported
  namespace: nodejs
status:
  observedGeneration: 1 # odigos detects unsupported version and does not rollout the deploy
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionveryold
  namespace: nodejs
spec:
  containers:
    - name: versionveryold
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: nodejs
status:
  containerStatuses:
    - name: versionveryold
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionveryold
  namespace: nodejs
status:
  observedGeneration: 2 # odigos rollout the deployment after instrumentation (version not collected in runtime detection)
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionlatest
  namespace: python
spec:
  containers:
    - name: versionlatest
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: python
status:
  containerStatuses:
    - name: versionlatest
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionlatest
  namespace: python
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: python
  labels:
    instrumented-app: deployment-versionlatest
status:
  healthy: true
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionminimum
  namespace: python
spec:
  containers:
    - name: versionminimum
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: python
status:
  containerStatuses:
    - name: versionminimum
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionminimum
  namespace: python
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: odigos.io/v1alpha1
kind: InstrumentationInstance
metadata:
  namespace: python
  labels:
    instrumented-app: deployment-versionminimum
status:
  healthy: true
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): false
  labels:
    app: versionunsupported
  namespace: python 
spec:
  containers:
    - name: versionunsupported
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']): null
status:
  containerStatuses:
    - name: versionunsupported
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionunsupported
  namespace: python
status:
  observedGeneration: 1 # odigos detects unsupported version and does not rollout the deploy
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionveryold
  namespace: python
spec:
  containers:
    - name: versionveryold
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: python
status:
  containerStatuses:
    - name: versionveryold
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionveryold
  namespace: python
status:
  observedGeneration: 2 # odigos rollout the deployment after instrumentation (version not collected in runtime detection)
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionlatest
  namespace: java
spec:
  containers:
    - name: versionlatest
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: java
status:
  containerStatuses:
    - name: versionlatest
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionlatest
  namespace: java
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
---
apiVersion: v1
kind: Pod
metadata:
  (contains(keys(labels), 'odigos.io/agents-meta-hash')): true
  labels:
    app: versionminimum
  namespace: java
spec:
  containers:
    - name: versionminimum
      (env[?name == 'ODIGOS_WORKLOAD_NAMESPACE']):
        - value: java
status:
  containerStatuses:
    - name: versionminimum
      started: true
      ready: true
      restartCount: 0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: versionminimum
  namespace: java
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
