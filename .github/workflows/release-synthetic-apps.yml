name: Release Synthetic Apps

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'nodejs/**'
      - 'python/**'
      - 'java/**'
      - 'golang/**'

permissions:
  contents: read
  id-token: 'write'
  packages: write

jobs:
  publish-docker-images:
    strategy:
      matrix:
        include:
          # Node.js images
          - deploymenttype: httpserver
            language: nodejs
            scenario: httpserver
          - deploymenttype: versionlatest
            language: nodejs
            scenario: httpserver
          - deploymenttype: versionminimum
            language: nodejs
            scenario: httpserver
          - deploymenttype: versionunsupported
            language: nodejs
            scenario: httpserver
          - deploymenttype: versionveryold
            language: nodejs
            scenario: httpserver
          - deploymenttype: envdockerfile
            language: nodejs
            scenario: httpserver
          - deploymenttype: envmanifest
            language: nodejs
            scenario: httpserver
          # Python images
          - deploymenttype: httpserver
            language: python
            scenario: httpserver
          - deploymenttype: versionlatest
            language: python
            scenario: httpserver
          - deploymenttype: versionminimum
            language: python
            scenario: httpserver
          - deploymenttype: versionunsupported
            language: python
            scenario: httpserver
          - deploymenttype: versionveryold
            language: python
            scenario: httpserver
          - deploymenttype: envdockerfile
            language: python
            scenario: httpserver
          - deploymenttype: envmanifest
            language: python
            scenario: httpserver
          # Java images
          - deploymenttype: httpserver
            language: java
            scenario: httpserver
          - deploymenttype: versionlatest
            language: java
            scenario: httpserver
          - deploymenttype: versionminimum
            language: java
            scenario: httpserver
          - deploymenttype: envdockerfile
            language: java
            scenario: httpserver
          - deploymenttype: envmanifest
            language: java
            scenario: httpserver
          # Go images
          - deploymenttype: httpserver
            language: golang
            scenario: httpserver
          - deploymenttype: versionlatest
            language: golang
            scenario: httpserver
          - deploymenttype: versionminimum
            language: golang
            scenario: httpserver
          - deploymenttype: versionunsupported
            language: golang
            scenario: httpserver
    runs-on: ubuntu-latest
    steps:
      - name: Store new version in env
        run: echo "TAG=${GITHUB_REF##refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image for ${{ matrix.deploymenttype }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ matrix.language }}-${{ matrix.scenario }}:${{ matrix.deploymenttype }}
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.language }}/${{ matrix.scenario }}/deployments/${{ matrix.deploymenttype }}/Dockerfile
          context: ${{ matrix.language }}/${{ matrix.scenario }}